name: Build and Publish to PyPI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  format:
    name: Code formatting
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10"]
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4.0.0
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install tox
    - name: Formatting code with black
      run: |
        tox -e format
  lint:
    name: Code linting
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10"]
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4.0.0
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install tox
    - name: Linting code with flake8
      run: |
        tox -e lint
  typecheck:
    name: Code type checking
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10"]
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4.0.0
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install tox
    - name: Type checking code with flake8
      run: |
        tox -e typecheck
  test:
    name: Code testing
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python:
          - version: "3.8"
            toxenv: "py38"
          - version: "3.9"
            toxenv: "py39"
          - version: "3.10"
            toxenv: "py310"
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python.version }}
      uses: actions/setup-python@v4.0.0
      with:
        python-version: ${{ matrix.python.version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install tox
    - name: Testing code with pytest
      run: |
        tox -e ${{ matrix.python.toxenv }}
  build_source_dist:
    name: Build source distribution
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10"]
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4.0.0
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install build
    - name: Building source distribution package
      run: |
        python -m build --sdist
    - uses: actions/upload-artifact@v3
      with:
        path: ./dist/*.tar.gz
  build_wheels:
    name: Build wheels 
    runs-on: ${{ matrix.target.os }}
    strategy:
      matrix:
        target:
          - os: "ubuntu-20.04"
            python-version: "3.10"
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.target.python-version }}
      uses: actions/setup-python@v4.0.0
      with:
        python-version: ${{ matrix.target.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install build
    - name: Building wheels for ${{ matrix.target.os }}
      run: |
        python -m build --wheel
    - uses: actions/upload-artifact@v3
      with:
        path: ./dist/*.whl
